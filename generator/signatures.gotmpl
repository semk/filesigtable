/******************************************************************************
* Autogenerated file signature table.
*
*	Copyright (c) 2020 Sreejith Kesavan <sreejithemk@gmail.com>
*	WARNING: This file is autogenerated. Please do not edit by hand
******************************************************************************/


package sigtable

import (
	"bytes"
	"io"
	"strings"
)

{{ range $sig := .Sigs }}
var {{ $sig.SigName }} = FileSignature{
	Description: "{{ $sig.Description }}",
	Header: {{ $sig.HeaderGoString }},
	Extensions: {{ $sig.ExtensionsGoString }},
	Class: "{{ $sig.Class }}",
	HeaderOffset: {{ $sig.HeaderOffset }},
	Trailer: {{ $sig.TrailerGoString }},
}
{{ end }}


var signatures = []FileSignature{
{{- range $sig := .Sigs }}
	{{ $sig.SigName }},
{{- end }}
}


var signaturesByExtension = map[string][]FileSignature{
{{- range $ext, $sigs := .SigsByExt }}
	"{{ $ext }}": {
{{- range $sig := $sigs }}
		{{ $sig.SigName }},
{{- end }}
	},
{{- end }}
}

func GetSignaturesByExtension(ext string) []FileSignature {
	ext = strings.TrimLeft(ext, ".")
	sigs, _ := signaturesByExtension[ext]
	return sigs
}

func GetAllSignatures() []FileSignature {
	return signatures
}

func ValidateSignature(s FileSignature, f io.ReaderAt) (bool, error) {
	headerBuf := make([]byte, len(s.Header))
	_, err := f.ReadAt(headerBuf, s.HeaderOffset)
	if err != nil {
		return false, err
	}
	if bytes.Compare(headerBuf, s.Header) == 0 {
		return true, nil
	}
	return false, nil
}